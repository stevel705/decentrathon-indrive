#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ YOLO –º–æ–¥–µ–ª–∏ –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python train_damage_simple.py
"""

from ultralytics import YOLO
import yaml
from pathlib import Path

def create_dataset_config():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–∞—Ç–∞—Å–µ—Ç–∞"""
    config = {
        'path': str(Path('data').absolute()),
        'train': 'images/train',
        'val': 'images/val',
        'nc': 8,  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞—Å—Å–æ–≤
        'names': [
            'damaged_door',
            'damaged_window', 
            'damaged_headlight',
            'damaged_mirror',
            'dent',
            'damaged_hood',
            'damaged_bumper',
            'damaged_windshield'
        ]
    }
    
    with open('damage_config.yaml', 'w') as f:
        yaml.dump(config, f, default_flow_style=False)
    
    return 'damage_config.yaml'

def main():
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_path = create_dataset_config()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å YOLOv8
    model = YOLO('yolov8n.pt')  # nano –≤–µ—Ä—Å–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    
    # –¢—Ä–µ–Ω–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
    results = model.train(
        data=config_path,
        epochs=50,          # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ø–æ—Ö
        imgsz=640,          # –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        batch=8,            # –†–∞–∑–º–µ—Ä –±–∞—Ç—á–∞ (—É–º–µ–Ω—å—à–∏—Ç–µ –µ—Å–ª–∏ –º–∞–ª–æ –ø–∞–º—è—Ç–∏)
        lr0=0.01,          # –°–∫–æ—Ä–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è
        device='auto',      # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        project='runs',     # –ü–∞–ø–∫–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        name='damage_detection',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
        patience=10,        # –†–∞–Ω–Ω—è—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
        save_period=10,     # –°–æ—Ö—Ä–∞–Ω—è—Ç—å –∫–∞–∂–¥—ã–µ 10 —ç–ø–æ—Ö
        plots=True,         # –°–æ—Ö—Ä–∞–Ω—è—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏
        val=True,          # –í–∞–ª–∏–¥–∞—Ü–∏—è
        
        # –ê—É–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        flipud=0.0,        # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç
        fliplr=0.5,        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç
        degrees=10,        # –ü–æ–≤–æ—Ä–æ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        translate=0.1,     # –°–¥–≤–∏–≥
        scale=0.5,         # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
        hsv_h=0.015,       # –°–¥–≤–∏–≥ —Ü–≤–µ—Ç–∞
        hsv_s=0.7,         # –ù–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å
        hsv_v=0.4,         # –Ø—Ä–∫–æ—Å—Ç—å
    )
    
    print("‚úÖ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {results.save_dir}")
    print(f"–õ—É—á—à–∞—è –º–æ–¥–µ–ª—å: {results.save_dir}/weights/best.pt")
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
    best_model = YOLO(f"{results.save_dir}/weights/best.pt")
    metrics = best_model.val()
    
    print("\nüìä –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:")
    print(f"mAP@0.5: {metrics.box.map50:.4f}")
    print(f"mAP@0.5:0.95: {metrics.box.map:.4f}")
    print(f"Precision: {metrics.box.mp:.4f}")
    print(f"Recall: {metrics.box.mr:.4f}")

if __name__ == "__main__":
    main()
